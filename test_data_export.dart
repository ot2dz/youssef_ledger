// test_data_export.dart - ุงุฎุชุจุงุฑ ุชุตุฏูุฑ ุงูุจูุงูุงุช ุงููุญููุฉ
import 'dart:io';
import 'package:flutter/material.dart';
import 'lib/services/local_data_export_service.dart';
import 'lib/data/local/database_helper.dart';
import 'lib/data/models/party.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  try {
    print('\n๐ง ุจุฏุก ุงุฎุชุจุงุฑ ุชุตุฏูุฑ ุงูุจูุงูุงุช ุงููุญููุฉ...\n');

    // ุงูุชุฃูุฏ ูู ูุฌูุฏ ุจูุงูุงุช ุชุฌุฑูุจูุฉ
    await _ensureTestData();

    print('\n' + '=' * 50);

    // 1. ุงุฎุชุจุงุฑ ุชุตุฏูุฑ ุจูุงูุงุช ุงูุฃุทุฑุงู
    print('\n๐ ุงุฎุชุจุงุฑ ุชุตุฏูุฑ ุจูุงูุงุช ุงูุฃุทุฑุงู...');
    final partiesData = await LocalDataExportService.exportPartiesData();

    print('โ ุชู ุชุตุฏูุฑ ุงูุจูุงูุงุช ุจูุฌุงุญ!');
    print('๐ ุงูุฅุญุตุงุฆูุงุช:');
    print('- ุนุฏุฏ ุงูุฃุทุฑุงู: ${partiesData['statistics']['total_parties']}');
    print('- ุนุฏุฏ ุงูุฃุดุฎุงุต: ${partiesData['statistics']['persons_count']}');
    print('- ุนุฏุฏ ุงูููุฑุฏูู: ${partiesData['statistics']['vendors_count']}');
    print(
      '- ุนุฏุฏ ุงููุนุงููุงุช: ${partiesData['statistics']['total_transactions']}',
    );

    // ุญุณุงุจ ุญุฌู ุงูุจูุงูุงุช
    final partiesSize = LocalDataExportService.estimateDataSize(partiesData);
    print('๐ ุญุฌู ุงูุจูุงูุงุช ุงูุชูุฏูุฑู: $partiesSize ุจุงูุช');

    print('\n' + '=' * 50);

    // 2. ุงุฎุชุจุงุฑ ุชุตุฏูุฑ ุจูุงูุงุช ุงููุธุงู
    print('\nโ๏ธ ุงุฎุชุจุงุฑ ุชุตุฏูุฑ ุจูุงูุงุช ุงููุธุงู...');
    final systemData = await LocalDataExportService.exportSystemData();

    print('โ ุชู ุชุตุฏูุฑ ุจูุงูุงุช ุงููุธุงู ุจูุฌุงุญ!');
    print('๐ง ุงูุฅุนุฏุงุฏุงุช: ${systemData['settings']?.keys.length ?? 0}');
    print(
      '๐ ูุฆุงุช ุงููุตุฑููุงุช: ${(systemData['categories']['expense'] as List?)?.length ?? 0}',
    );
    print(
      '๐ ูุฆุงุช ุงูุฏุฎู: ${(systemData['categories']['income'] as List?)?.length ?? 0}',
    );

    final systemSize = LocalDataExportService.estimateDataSize(systemData);
    print('๐ ุญุฌู ุจูุงูุงุช ุงููุธุงู: $systemSize ุจุงูุช');

    print('\n' + '=' * 50);

    // 3. ุงุฎุชุจุงุฑ ุงูุชุตุฏูุฑ ุงูุดุงูู
    print('\n๐ฏ ุงุฎุชุจุงุฑ ุงูุชุตุฏูุฑ ุงูุดุงูู...');
    final fullData = await LocalDataExportService.exportAllData();

    print('โ ุชู ุงูุชุตุฏูุฑ ุงูุดุงูู ุจูุฌุงุญ!');
    final fullSize = LocalDataExportService.estimateDataSize(fullData);
    print('๐ ุญุฌู ุงูุจูุงูุงุช ุงููุงููุฉ: $fullSize ุจุงูุช');

    // ุชุญุณูู ุงูุจูุงูุงุช
    final optimizedData = LocalDataExportService.optimizeExportData(fullData);
    final optimizedSize = LocalDataExportService.estimateDataSize(
      optimizedData,
    );
    print('๐๏ธ ุญุฌู ุงูุจูุงูุงุช ุงููุญุณูุฉ: $optimizedSize ุจุงูุช');
    print(
      '๐ ูุณุจุฉ ุงูุชุญุณูู: ${((fullSize - optimizedSize) / fullSize * 100).toStringAsFixed(1)}%',
    );

    print('\n' + '=' * 50);

    // 4. ุงุฎุชุจุงุฑ ุชุตุฏูุฑ ุญุณุจ ููุน ุงูุทุฑู
    print('\n๐ฅ ุงุฎุชุจุงุฑ ุชุตุฏูุฑ ุงูุฃุดุฎุงุต ููุท...');
    final personsData = await LocalDataExportService.exportPartiesByRole(
      PartyRole.person,
    );
    print('โ ุชู ุชุตุฏูุฑ ุจูุงูุงุช ุงูุฃุดุฎุงุต: ${personsData['count']} ุดุฎุต');

    print('\n๐ช ุงุฎุชุจุงุฑ ุชุตุฏูุฑ ุงูููุฑุฏูู ููุท...');
    final vendorsData = await LocalDataExportService.exportPartiesByRole(
      PartyRole.vendor,
    );
    print('โ ุชู ุชุตุฏูุฑ ุจูุงูุงุช ุงูููุฑุฏูู: ${vendorsData['count']} ููุฑุฏ');

    print('\n๐ ุงูุชูุช ุฌููุน ุงุฎุชุจุงุฑุงุช ุงูุชุตุฏูุฑ ุจูุฌุงุญ!');

    // ุนุฑุถ ูููุฐุฌ ูู ุงูุจูุงูุงุช ุงููุตุฏุฑุฉ
    print('\n๐ ูููุฐุฌ ูู ุงูุจูุงูุงุช ุงููุตุฏุฑุฉ:');
    final sample = _createSampleOutput(fullData);
    print(sample);
  } catch (e) {
    print('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ: $e');
    exit(1);
  }
}

/// ุฅูุดุงุก ุจูุงูุงุช ุชุฌุฑูุจูุฉ ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ
Future<void> _ensureTestData() async {
  try {
    print('๐ ุงูุชุญูู ูู ูุฌูุฏ ุจูุงูุงุช ุชุฌุฑูุจูุฉ...');

    final persons = await DatabaseHelper.instance.getPersons();
    final vendors = await DatabaseHelper.instance.getVendors();

    if (persons.isEmpty && vendors.isEmpty) {
      print('๐ ุฅูุดุงุก ุจูุงูุงุช ุชุฌุฑูุจูุฉ...');

      // ุฅุถุงูุฉ ุฃุดุฎุงุต ุชุฌุฑูุจููู
      await DatabaseHelper.instance.createPerson(
        'ุฃุญูุฏ ูุญูุฏ',
        phone: '123456789',
      );
      await DatabaseHelper.instance.createPerson(
        'ูุงุทูุฉ ุนูู',
        phone: '987654321',
      );

      // ุฅุถุงูุฉ ููุฑุฏูู ุชุฌุฑูุจููู
      await DatabaseHelper.instance.createVendor(
        'ููุฑุฏ ุงูุฃููุดุฉ ุงูุฐูุจูุฉ',
        phone: '555000111',
      );
      await DatabaseHelper.instance.createVendor(
        'ุดุฑูุฉ ุงููุณูุฌ ุงููุชูุฏู',
        phone: '555000222',
      );

      print('โ ุชู ุฅูุดุงุก ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ');
    } else {
      print(
        'โ ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ ูุชููุฑุฉ: ${persons.length} ุฃุดุฎุงุตุ ${vendors.length} ููุฑุฏูู',
      );
    }
  } catch (e) {
    print('โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุจูุงูุงุช ุงูุชุฌุฑูุจูุฉ: $e');
  }
}

/// ุฅูุดุงุก ูููุฐุฌ ูุจุณุท ููุนุฑุถ
String _createSampleOutput(Map<String, dynamic> fullData) {
  final buffer = StringBuffer();

  try {
    final exportInfo = fullData['export_info'];
    buffer.writeln('ุชุงุฑูุฎ ุงูุชุตุฏูุฑ: ${exportInfo['export_date']}');
    buffer.writeln('ููุน ุงูุชุตุฏูุฑ: ${exportInfo['export_type']}');

    final partiesData = fullData['parties_data'];
    if (partiesData != null) {
      final statistics = partiesData['statistics'];
      buffer.writeln('ุฅุฌูุงูู ุงูุฃุทุฑุงู: ${statistics['total_parties']}');
      buffer.writeln('ุฅุฌูุงูู ุงููุนุงููุงุช: ${statistics['total_transactions']}');
    }

    final systemData = fullData['system_data'];
    if (systemData != null) {
      final settings = systemData['settings'] as Map?;
      if (settings != null) {
        buffer.writeln('ุงูุฅุนุฏุงุฏุงุช ุงููุญููุธุฉ: ${settings.keys.join(', ')}');
      }
    }
  } catch (e) {
    buffer.writeln('ุฎุทุฃ ูู ุฅูุดุงุก ุงููููุฐุฌ: $e');
  }

  return buffer.toString();
}
