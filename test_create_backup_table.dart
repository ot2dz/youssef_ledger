// test_create_backup_table.dart - ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฌุฏูู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ
import 'dart:io';
import 'lib/services/neon_database_service.dart';

void main() async {
  try {
    print('\n๐ง ุจุฏุก ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฌุฏูู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ...\n');

    // ุงุฎุชุจุงุฑ ุงูุงุชุตุงู
    print('๐ ุงุฎุชุจุงุฑ ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช...');
    final connectionTest = await NeonDatabaseService.testConnection();
    if (!connectionTest) {
      print('โ ูุดู ูู ุงูุงุชุตุงู ุจูุงุนุฏุฉ ุงูุจูุงูุงุช');
      exit(1);
    }

    print('\n' + '=' * 50);

    // ุฅูุดุงุก ุฌุฏูู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ
    print('\n๐๏ธ ุฅูุดุงุก ุฌุฏูู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ...');
    final tableCreated = await NeonDatabaseService.createBackupTable();

    if (tableCreated) {
      print('โ ุชู ุฅูุดุงุก ุฌุฏูู backup_data ุจูุฌุงุญ!');
    } else {
      print('โ ูุดู ูู ุฅูุดุงุก ุฌุฏูู backup_data');
      exit(1);
    }

    print('\n๐ ุงูุชูู ุงูุงุฎุชุจุงุฑ ุจูุฌุงุญ! ุฌุฏูู ุงููุณุฎ ุงูุงุญุชูุงุทูุฉ ุฌุงูุฒ ููุงุณุชุฎุฏุงู.');
  } catch (e) {
    print('โ ุฎุทุฃ ูู ุงูุงุฎุชุจุงุฑ: $e');
    exit(1);
  }
}
